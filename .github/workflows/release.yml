name: 'DSE_PG_BYPASS'

on:
  push:
    branches:
      - main

env:
  VERSION: 0.0.2
  ARTIFACT_NAME: DSE_PG_BYPASS-${VERSION}-win64-release.zip

jobs:
  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Extract Patch Version
        id: extract_patch
        shell: bash
        run: echo "PATCH_VERSION=${VERSION##*.}" >> $GITHUB_ENV

      - name: Configure CMake
        run: |
          mkdir build
          cd build
          cmake -DPATCH_VERSION=${{ env.PATCH_VERSION }} ../

      - name: Build
        run: |
          cd build
          cmake --build . --config Release

      - name: Package
        run: |
          cd build
          cmake --build . --target package --config Release

      - name: List CPack output (wildcard)
        run: dir build\_CPack_Packages\win64\ZIP\*

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: uploads
          path: build/_CPack_Packages/win64/ZIP/${{ env.ARTIFACT_NAME }}

  upload-release:
    runs-on: ubuntu-latest
    needs: build_windows
    steps:
      - uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: DSE_PG_BYPASS-${{ env.VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: uploads

      - name: List downloaded artifacts
        run: ls -lR uploads

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./uploads/${{ env.ARTIFACT_NAME }}
          asset_name: ${{ env.ARTIFACT_NAME }}
          asset_content_type: application/zip